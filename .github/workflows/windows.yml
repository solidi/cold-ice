name: Windows

on: [push]

env:
  STUDIOMDL_FILE_PATH: workspace/src/utils/studiomdl/studiomdl.sln
  SPRGEN_FILE_PATH: workspace/src/utils/sprgen/sprgen.sln
  MAKELS_FILE_PATH: workspace/src/utils/makels/makels.sln
  QLUMPY_FILE_PATH: workspace/src/utils/qlumpy/qlumpy.sln
  MAKEFONT_FILE_PATH: workspace/src/utils/makefont/makefont.sln
  ZHLT_FILE_PATH: workspace/zhlt/zhlt.sln
  QPAKMAN_FILE_PATH: workspace/qpakman/qpakman.sln

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

jobs:
  ice_so_and_client_so:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2

    - name: Update sources to include xenial main
      run: sudo su -c "echo 'deb http://dk.archive.ubuntu.com/ubuntu/ xenial main' >> /etc/apt/sources.list"

    - name: Update sources to include xenial universe
      run: sudo su -c "echo 'deb http://dk.archive.ubuntu.com/ubuntu/ xenial universe' >> /etc/apt/sources.list"

    - name: Update packages
      run: sudo apt update -y

    - name: Install make
      run: sudo apt-get install make

    - name: Install g++-4.8
      run: sudo apt install g++-4.8 gcc-4.8 -y

    - name: Install headers
      run: sudo apt-get install gcc-4.8-multilib g++-4.8-multilib -y

    - name: Build ice.so
      working-directory: ./workspace/src/linux
      run: make hl CFG=${{env.BUILD_CONFIGURATION}}

    - name: Build client.so
      working-directory: ./workspace/src/linux
      run: make hl_cdll CFG=${{env.BUILD_CONFIGURATION}}

    - name: Upload ice.so
      uses: actions/upload-artifact@v2
      with:
        name: linux_ice
        path: ./workspace/src/linux/${{env.BUILD_CONFIGURATION}}/ice.so

    - name: Upload client.so
      uses: actions/upload-artifact@v2
      with:
        name: linux_client
        path: ./workspace/src/linux/${{env.BUILD_CONFIGURATION}}/client.so

  package_coldice:
    runs-on: windows-latest
    needs: ice_so_and_client_so

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
        lfs: 'true' #ffmpeg

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages for ${{env.STUDIOMDL_FILE_PATH}}
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.STUDIOMDL_FILE_PATH}}

    - name: Download ice.so
      uses: actions/download-artifact@v2
      with:
        name: linux_ice
        path: ./workspace/libs

    - name: Download client.so
      uses: actions/download-artifact@v2
      with:
        name: linux_client
        path: ./workspace/libs

    - name: Build studiomdl.exe
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.STUDIOMDL_FILE_PATH}}

    - name: Build sprgen.exe
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SPRGEN_FILE_PATH}}

    - name: Build makels.exe
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.MAKELS_FILE_PATH}}

    - name: Build qlumpy.exe
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.QLUMPY_FILE_PATH}}

    - name: Build makefont.exe
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.MAKEFONT_FILE_PATH}}

    - name: Build zhlt map tools
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.ZHLT_FILE_PATH}}

    - name: Build qpakman.exe
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.QPAKMAN_FILE_PATH}}

    - name: Compile Windows
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        .\workspace\Build-Windows.ps1

    - name: Compile and package Cold Ice
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        .\workspace\Build-Release.ps1

    - name: Archive Cold Ice Release
      uses: actions/upload-artifact@v2
      with:
        name: last-build
        path: .\workspace\last-build.zip
